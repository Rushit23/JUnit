//  Exception testing Within Junit


- Exception Type

- Exception Message

---------------------------------------------
	public void withdraw(int amount) throws InsufficientFundsException 
	{ 
		if (amount > balance) 
	  
			throw new Insufficientrundsexception();
		
		else
		{	
			balance = balance - amount; 
			
		}
	}
	
-----------------------------------------------

// WIll Test That Method Is Going To Throw The Exception Or Not

	@Test(expected =InsufficientFundsException.class)
	public Void ValidateWithdrawExceptionTest() throws InsufficientFundsException
	{

		BankOperation customer = new BankOperation();
		customer.withdraw(150);

	}
-----------------------------------------------

//  Rule Can Help Us Teting The Exception Message


@Rule
public ExpectedException thrown = ExpectedException.none();

	@Test
	public Void ValidateWithdrawExceptionMessageTest() throws InsufficientFundsException
	{
		thrown.expect(InsufficientFundsException.class);
		thrown.expectMessage("Insufficient Funds");

		BankOperation customer = new BankOperation();
		customer.withdraw(150);

	}

----------------------------------------------------------------------------------
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;

public class ExceptionTest
{
	
	
	
/************  WIll Test That Method Is Going To Throw The Exception Or Not  ***************/
	
	
	@Test(expected =InsufficientFundsException.class)
	public Void ValidateWithdrawExceptionTest() throws InsufficientFundsException
	{
		BankOperation customer = new BankOperation();
		customer.withdraw(150);

	}
	
	
	
/************  Rule Can Help Us Teting The Exception Message  ***************/


	@Rule
	public ExpectedException thrown = ExpectedException.none();

	@Test
	public Void ValidateWithdrawExceptionMessageTest() throws InsufficientFundsException
	{
		thrown.expect(InsufficientFundsException.class);
		thrown.expectMessage("Insufficient Funds");

		BankOperation customer = new BankOperation();
		customer.withdraw(150);

	}
	

}
